import { type CommonAutoFill, type InputSize, type InputType, type ValidationStatus } from './types';
interface InputProps {
    disabled?: boolean;
    label?: string;
    modelValue?: string | number;
    required?: boolean;
    size?: InputSize;
    type?: InputType;
    autocomplete?: CommonAutoFill;
    validationStatus?: ValidationStatus;
    blockClasses?: string | string[] | Record<string, unknown>;
}
declare const model: import("vue").WritableComputedRef<string | number, string | number>;
declare const inputClasses: import("vue").Ref<string, string>, inputBlockClasses: import("vue").Ref<string, string>, labelClasses: import("vue").Ref<string, string>;
declare const validationWrapperClasses: import("vue").ComputedRef<string>;
declare const __VLS_ctx: InstanceType<__VLS_PickNotAny<typeof __VLS_self, new () => {}>>;
declare var __VLS_1: {}, __VLS_3: {}, __VLS_5: {}, __VLS_7: {};
type __VLS_Slots = __VLS_PrettifyGlobal<__VLS_OmitStringIndex<typeof __VLS_ctx.$slots> & {
    prefix?: (props: typeof __VLS_1) => any;
} & {
    suffix?: (props: typeof __VLS_3) => any;
} & {
    validationMessage?: (props: typeof __VLS_5) => any;
} & {
    helper?: (props: typeof __VLS_7) => any;
}>;
declare const __VLS_self: import("vue").DefineComponent<InputProps, {
    model: typeof model;
    inputClasses: typeof inputClasses;
    inputBlockClasses: typeof inputBlockClasses;
    labelClasses: typeof labelClasses;
    validationWrapperClasses: typeof validationWrapperClasses;
}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<InputProps> & Readonly<{}>, {
    label: string;
    type: InputType;
    size: InputSize;
    disabled: boolean;
    required: boolean;
    modelValue: string | number;
    autocomplete: CommonAutoFill;
    validationStatus: ValidationStatus;
    blockClasses: string | string[] | Record<string, unknown>;
}, {}, {}, {}, string, import("vue").ComponentProvideOptions, false, {}, any>;
declare const __VLS_component: import("vue").DefineComponent<InputProps, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<InputProps> & Readonly<{}>, {
    label: string;
    type: InputType;
    size: InputSize;
    disabled: boolean;
    required: boolean;
    modelValue: string | number;
    autocomplete: CommonAutoFill;
    validationStatus: ValidationStatus;
    blockClasses: string | string[] | Record<string, unknown>;
}, {}, {}, {}, string, import("vue").ComponentProvideOptions, false, {}, any>;
declare const _default: __VLS_WithSlots<typeof __VLS_component, __VLS_Slots>;
export default _default;
type __VLS_WithSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
